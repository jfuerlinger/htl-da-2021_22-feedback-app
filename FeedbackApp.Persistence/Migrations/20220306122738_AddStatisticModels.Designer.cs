// <auto-generated />
using System;
using FeedbackApp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FeedbackApp.Persistence.Migrations
{
    [DbContext(typeof(FeedbackDbContext))]
    [Migration("20220306122738_AddStatisticModels")]
    partial class AddStatisticModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FeedbackApp.Core.Model.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<int?>("TeachingUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeachingUnitId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.GlobalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedFeedbacksCount")
                        .HasColumnType("int");

                    b.Property<int>("CreatedTeachingUnitsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GlobalHistories");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.TeachingUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TeachingUnits");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.TeachingUnitStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvgStars")
                        .HasColumnType("float");

                    b.Property<int>("FeedbackCount")
                        .HasColumnType("int");

                    b.Property<int>("TeachingUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeachingUnitId");

                    b.ToTable("TeachingUnitStatistics");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.UserStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvgStars")
                        .HasColumnType("float");

                    b.Property<int>("CreatedFeedbacksCount")
                        .HasColumnType("int");

                    b.Property<int>("CreatedTeachingUnitsCount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserStatistics");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.Feedback", b =>
                {
                    b.HasOne("FeedbackApp.Core.Model.TeachingUnit", "TeachingUnit")
                        .WithMany()
                        .HasForeignKey("TeachingUnitId");

                    b.HasOne("FeedbackApp.Core.Model.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId");

                    b.Navigation("TeachingUnit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.TeachingUnit", b =>
                {
                    b.HasOne("FeedbackApp.Core.Model.User", "User")
                        .WithMany("TeachingUnits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.TeachingUnitStatistic", b =>
                {
                    b.HasOne("FeedbackApp.Core.Model.TeachingUnit", "teachingUnit")
                        .WithMany()
                        .HasForeignKey("TeachingUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("teachingUnit");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.UserStatistic", b =>
                {
                    b.HasOne("FeedbackApp.Core.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FeedbackApp.Core.Model.User", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("TeachingUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
